/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AppRouteImport } from './routes/_app'
import { Route as AppIndexRouteImport } from './routes/_app.index'
import { Route as AppCategoryIndexRouteImport } from './routes/_app.$category.index'
import { Route as AppCategoryChar123PostIdChar125RouteImport } from './routes/_app.$category.{-$postId}'

const AppRoute = AppRouteImport.update({
  id: '/_app',
  getParentRoute: () => rootRouteImport,
} as any)
const AppIndexRoute = AppIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppRoute,
} as any)
const AppCategoryIndexRoute = AppCategoryIndexRouteImport.update({
  id: '/$category/',
  path: '/$category/',
  getParentRoute: () => AppRoute,
} as any)
const AppCategoryChar123PostIdChar125Route =
  AppCategoryChar123PostIdChar125RouteImport.update({
    id: '/$category/{-$postId}',
    path: '/$category/{-$postId}',
    getParentRoute: () => AppRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof AppIndexRoute
  '/$category/{-$postId}': typeof AppCategoryChar123PostIdChar125Route
  '/$category': typeof AppCategoryIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof AppIndexRoute
  '/$category/{-$postId}': typeof AppCategoryChar123PostIdChar125Route
  '/$category': typeof AppCategoryIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_app': typeof AppRouteWithChildren
  '/_app/': typeof AppIndexRoute
  '/_app/$category/{-$postId}': typeof AppCategoryChar123PostIdChar125Route
  '/_app/$category/': typeof AppCategoryIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/$category/{-$postId}' | '/$category'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/$category/{-$postId}' | '/$category'
  id:
    | '__root__'
    | '/_app'
    | '/_app/'
    | '/_app/$category/{-$postId}'
    | '/_app/$category/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AppRoute: typeof AppRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_app': {
      id: '/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app/': {
      id: '/_app/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AppIndexRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/$category/': {
      id: '/_app/$category/'
      path: '/$category'
      fullPath: '/$category'
      preLoaderRoute: typeof AppCategoryIndexRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/$category/{-$postId}': {
      id: '/_app/$category/{-$postId}'
      path: '/$category/{-$postId}'
      fullPath: '/$category/{-$postId}'
      preLoaderRoute: typeof AppCategoryChar123PostIdChar125RouteImport
      parentRoute: typeof AppRoute
    }
  }
}

interface AppRouteChildren {
  AppIndexRoute: typeof AppIndexRoute
  AppCategoryChar123PostIdChar125Route: typeof AppCategoryChar123PostIdChar125Route
  AppCategoryIndexRoute: typeof AppCategoryIndexRoute
}

const AppRouteChildren: AppRouteChildren = {
  AppIndexRoute: AppIndexRoute,
  AppCategoryChar123PostIdChar125Route: AppCategoryChar123PostIdChar125Route,
  AppCategoryIndexRoute: AppCategoryIndexRoute,
}

const AppRouteWithChildren = AppRoute._addFileChildren(AppRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  AppRoute: AppRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
